{"version":3,"sources":["context/CurrentStcok.js","component/Home.js","component/SearchBar.js","component/CandleChart.js","component/Chart.js","component/StockInfo.js","component/StockDetails.js","component/StockNews.js","component/StockResult.js","App.js","serviceWorker.js","index.js","img/usa.jpg","img/uk.jpg","img/euro.jpg"],"names":["CurrentStockContext","createContext","CurrentStockProvider","Provider","Home","useContext","className","SearchBar","setCurrent","useState","setSearchTerm","sendSearch","setSendSearch","setError","searchResult","setSearchResult","typing","setTyping","timer","setTimer","SearchList","map","item","index","key","to","symbol","onClick","e","event","handleChooseStock","name","exchange","flagIMG","NYSE","usa_jpg","NASDAQ","LSE","uk_jpg","EURONEXT","euro_jpg","src","exchangeFlag","exchangeShortName","searchStock","terms","financialmodel_API","Config","API_BaseURL","Search_setting","limit","API_Key","fetch","then","res","json","result","console","log","error","type","placeholder","aria-label","aria-describedby","onChange","clearTimeout","setTimeout","target","value","onKeyDown","CandleChart","props","ys","data","width","height","ratio","currentDate","Date","startDate","getFullYear","getMonth","getDay","numberFormat","format","margin","left","right","top","bottom","seriesName","xAccessor","d","date","xScale","scaleTime","xExtents","id","yExtents","high","low","axisAt","orient","ticks","timeIntervalBarWidth","utcDay","yAccessor","close","tooltipContent","currentItem","x","y","label","open","concat","each","stroke","filter","line","fontSize","prototype","PropTypes","array","isRequired","number","oneOf","defaultProps","fitWidth","AreaChartWithEdge","this","initialData","discontinuousTimeScaleProvider","inputDateAccessor","xScaleProvider","displayXAccessor","last","Math","max","length","tickStroke","at","displayFormat","timeFormat","strokeWidth","fill","yLabel","origin","volume","w","h","opacity","widthRatio","React","Component","stockInfo","stock","changesPercent","changes","price","image","companyName","currency","toFixed","stockDetails","displayList","sector","industry","mktCap","range","lastDiv","ipoDate","ceo","Map","Object","entries","description","field","href","website","stockNews","news","i","top_result","push","values","dd","publishedDate","mm","time","site","title","text","top3_News","other_news_list","other_news","StockResult","profile","dailyData","isLoaded","setIsLoaded","stockData","setStockData","setDailyData","setStockNews","doneFetch","setDoneFetch","currentStock","setCurrentStock","useParams","domWidth","useRef","fetchPriceHistory","a","ajaxURL","Alphavantage_API_base","dataset","chartData","row","dayRecord","OHLCV","parseFloat","floor","sort","b","status","checkFetchStatus","fetchStockNews","div","document","createElement","innerHTML","textContent","innerText","catch","every","useEffect","fetchProfile","StockInfo","ref","el","current","Chart","window","innerWidth","StockDetails","StockNews","App","basename","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.654b47bd.chunk.js","sourcesContent":["import React, { createContext } from 'react';\r\n\r\nconst CurrentStockContext = createContext(null);\r\n\r\nexport const CurrentStockProvider = CurrentStockContext.Provider;\r\n\r\nexport default CurrentStockContext;","import React, { useContext, useState } from 'react';\r\nimport CurrentStockContext from '../context/CurrentStcok';\r\n\r\nfunction Home() {\r\n    const currentStock = useContext(CurrentStockContext);\r\n\r\n    return (\r\n        <div className=\"stock-result-container\">\r\n            <p>This is stock summmary page</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { BrowserRouter, HashRouter, Link } from 'react-router-dom'\r\nimport CurrentStockContext from '../context/CurrentStcok';\r\nimport Config from '../context/Config.json';\r\n\r\nimport usa_jpg from '../img/usa.jpg'\r\nimport uk_jpg from '../img/uk.jpg'\r\nimport euro_jpg from '../img/euro.jpg'\r\n\r\nfunction SearchBar() {\r\n  const [current, setCurrent] = useContext(CurrentStockContext);\r\n  const [input, setInput] = useState('');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sendSearch, setSendSearch] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [typing, setTyping] = useState(true);\r\n  const [timer, setTimer] = useState(0);\r\n\r\n  const WAIT_TIME = 1000;\r\n\r\n  const handleChange = event => {\r\n    setTyping(true);\r\n    clearTimeout(timer);\r\n    console.log(timer);\r\n    console.log(typing ? 'Typing' : 'not typing');\r\n\r\n    setTimer(setTimeout(function () {\r\n      setTyping(false);\r\n      setSearchTerm(event.target.value);\r\n      setSendSearch(true);\r\n      searchStock(event.target.value);\r\n    }, WAIT_TIME));\r\n  };\r\n\r\n  const handleKeyDown = event => {\r\n    if (event.key === 'Enter') {\r\n      setTyping(false);\r\n      setSearchTerm(event.target.value);\r\n      setSendSearch(true);\r\n      searchStock(event.target.value);\r\n    }\r\n  };\r\n\r\n  const handleChooseStock = (event, item) => {\r\n    setSearchTerm(null);\r\n    setSendSearch(false);\r\n    setSendSearch(null);\r\n    setCurrent(item.symbol);\r\n  }\r\n\r\n  const path_stock = '/stock/';\r\n\r\n  const exchangeFlag = (exchange) => {\r\n    let flagIMG = {\r\n      NYSE: usa_jpg,\r\n      NASDAQ: usa_jpg,\r\n      LSE: uk_jpg,\r\n      EURONEXT: euro_jpg\r\n    }\r\n\r\n    if (flagIMG[exchange]) return (\r\n      <div className=\"exchange-flag\">\r\n        <img src={flagIMG[exchange]} />\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n  const SearchList = () => {\r\n    if (sendSearch & sendSearch !== null & sendSearch !== '') {\r\n      if (\"Error Message\" in searchResult) {\r\n        return (\r\n          <div>Limited Reach</div>\r\n        );\r\n      } else {\r\n        return (\r\n          <ul className=\"search-result-wrapper list-group\">\r\n            {\r\n              searchResult.map((item, index) =>\r\n                <li className=\"search-result-item list-group-item px-1 py-2\" key={index}>\r\n                  <Link to={path_stock + item.symbol} onClick={e => handleChooseStock(e, item)} className=\"d-flex text-left align-middle py-1\">\r\n                    <div className=\"result-sumbol d-inline-block col-2\"><span className=\"symbol d-inline-block\">{item.symbol}</span></div>\r\n                    <div className=\"result-name d-inline-block col-7\"><span className=\"name\">{item.name}</span></div>\r\n                    <div className=\"result-exchange d-inline-block col-3\">\r\n                      {exchangeFlag(item.exchangeShortName)}\r\n                      <span className={\"exchange-symbol \" + item.exchangeShortName}>{item.exchangeShortName}</span>\r\n                    </div>\r\n                  </Link>\r\n                </li>\r\n              )\r\n            }\r\n          </ul>\r\n        );\r\n      }\r\n    } else {\r\n      return ('');\r\n    }\r\n  };\r\n\r\n  const searchStock = (terms) => {\r\n    let financialmodel_API = Config.API_BaseURL + \"search?query=\" + terms + \"&limit\" + Config.Search_setting.limit + \"&apikey=\" + Config.API_Key;\r\n\r\n    fetch(financialmodel_API)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          setSearchResult(result);\r\n          setSendSearch(true);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n          setSendSearch(true);\r\n          setError(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <header className=\"header d-flex justify-content-space-between\">\r\n      <div className=\"Search-block\">\r\n        <div className=\"Input-wrapper input-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-input form-control\"\r\n            placeholder=\"Stock symbol\"\r\n            aria-label=\"Stock symbol\"\r\n            aria-describedby=\"symbol\"\r\n            onChange={handleChange}\r\n            onKeyDown={handleKeyDown}\r\n          />\r\n        </div>\r\n        <SearchList />\r\n      </div>\r\n      <div className=\"menu-icon\"><span></span><span></span><span></span></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { scaleTime } from \"d3-scale\";\r\nimport { format } from \"d3-format\";\r\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\r\nimport { CandlestickSeries } from \"react-stockcharts/lib/series\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport { utcDay } from \"d3-time\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nimport { timeIntervalBarWidth } from \"react-stockcharts/lib/utils\";\r\nimport AreaSeries from \"react-stockcharts/lib/series/AreaSeries\";\r\nimport { HoverTooltip } from \"react-stockcharts/lib/tooltip\";\r\n\r\nlet CandleChart = (props) => {\r\n  const { data, type, width, height, ratio, symbol } = props;\r\n  const xAccessor = (d) => {\r\n    return d.date;\r\n  };\r\n  const currentDate = new Date();\r\n  const startDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDay() - 14);\r\n\r\n  const numberFormat = format(\".2f\");\r\n\r\n  const tooltipContent = (ys) => {\r\n    return ({ currentItem, xAccessor }) => {\r\n      return {\r\n        x: (xAccessor(currentItem)),\r\n        y: [\r\n          {\r\n            label: \"open\",\r\n            value: currentItem.open && numberFormat(currentItem.open)\r\n          },\r\n          {\r\n            label: \"close\",\r\n            value: currentItem.close && numberFormat(currentItem.close)\r\n          }, {\r\n            label: \"low\",\r\n            value: currentItem.low && numberFormat(currentItem.low)\r\n          }, {\r\n            label: \"high\",\r\n            value: currentItem.high && numberFormat(currentItem.high)\r\n          }\r\n        ]\r\n          .concat(\r\n            ys.map(each => ({\r\n              label: each.label,\r\n              value: each.value(currentItem),\r\n              stroke: each.stroke\r\n            }))\r\n          )\r\n          .filter(line => line.value)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"ChartJS\">\r\n      <ChartCanvas\r\n        height={height}\r\n        ratio={ratio}\r\n        width={width}\r\n        margin={{ left: 0, right: 50, top: 10, bottom: 30 }}\r\n        type={type}\r\n        data={data}\r\n        seriesName={symbol}\r\n        xAccessor={xAccessor}\r\n        xScale={scaleTime()}\r\n        xExtents={[startDate, currentDate]}\r\n      >\r\n        <Chart id={1} yExtents={(d) => [d.high, d.low]}>\r\n          <XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={10} />\r\n          <YAxis axisAt=\"right\" orient=\"right\" />\r\n          <CandlestickSeries width={timeIntervalBarWidth(utcDay)} />\r\n          <AreaSeries yAccessor={(d) => d.close} />\r\n          <HoverTooltip\r\n            yAccessor={(d) => [d.high, d.low]}\r\n            tooltipContent={tooltipContent([])}\r\n            fontSize={14}\r\n          />\r\n        </Chart>\r\n      </ChartCanvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nCandleChart.prototype = {\r\n  data: PropTypes.array.isRequired,\r\n  width: PropTypes.number.isRequired,\r\n  ratio: PropTypes.number.isRequired,\r\n  type: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\r\n};\r\n\r\nCandleChart.defaultProps = {\r\n  type: \"hybird\",\r\n};\r\n\r\nCandleChart = fitWidth(CandleChart);\r\n\r\nexport default CandleChart;","\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { format } from \"d3-format\";\r\nimport { timeFormat } from \"d3-time-format\";\r\n\r\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\r\nimport {\r\n\tBarSeries,\r\n\tAreaSeries,\r\n\tLineSeries\r\n} from \"react-stockcharts/lib/series\";\r\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport {\r\n\tCrossHairCursor,\r\n\tMouseCoordinateX,\r\n\tMouseCoordinateY,\r\n} from \"react-stockcharts/lib/coordinates\";\r\n\r\nimport { SingleValueTooltip } from \"react-stockcharts/lib/tooltip\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nimport { last } from \"react-stockcharts/lib/utils\";\r\n\r\nclass AreaChartWithEdge extends React.Component {\r\n\trender() {\r\n\t\tconst { type, data: initialData, width, height, ratio, symbol } = this.props;\r\n\r\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\r\n\t\t\t.inputDateAccessor(d => d.date);\r\n\t\tconst {\r\n\t\t\tdata,\r\n\t\t\txScale,\r\n\t\t\txAccessor,\r\n\t\t\tdisplayXAccessor,\r\n\t\t} = xScaleProvider(initialData);\r\n\r\n\t\tconst start = xAccessor(last(data));\r\n\t\tconst end = xAccessor(data[Math.max(0, data.length - 150)]);\r\n\t\tconst xExtents = [start, end];\r\n\t\treturn (\r\n\t\t\t<ChartCanvas height={height}\r\n\t\t\t\tratio={ratio}\r\n\t\t\t\twidth={width}\r\n\t\t\t\tmargin={{ left: 10, right: 50, top: 10, bottom: 30 }}\r\n\t\t\t\ttype={type}\r\n\t\t\t\tseriesName={symbol}\r\n\t\t\t\tdata={data}\r\n\t\t\t\txScale={xScale}\r\n\t\t\t\txAccessor={xAccessor}\r\n\t\t\t\tdisplayXAccessor={displayXAccessor}\r\n\t\t\t\txExtents={xExtents}\r\n\t\t\t>\r\n\t\t\t\t<Chart id={1} yExtents={d => d.close}>\r\n\r\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={10} tickStroke=\"white\" />\r\n\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={10} tickStroke=\"white\" />\r\n\r\n\t\t\t\t\t<MouseCoordinateX\r\n\t\t\t\t\t\tat=\"bottom\"\r\n\t\t\t\t\t\torient=\"bottom\"\r\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\r\n\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\tat=\"right\"\r\n\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\r\n\r\n\t\t\t\t\t<LineSeries yAccessor={d => d.close} strokeWidth={2} fill=\"#343a40\" />\r\n\r\n\t\t\t\t\t<SingleValueTooltip\r\n\t\t\t\t\t\tyLabel=\"Open\" yAccessor={(d) => d.open}\r\n\t\t\t\t\t\torigin={[0, 0]} />\r\n\t\t\t\t\t<SingleValueTooltip\r\n\t\t\t\t\t\tyLabel=\"Close\" yAccessor={(d) => d.close}\r\n\t\t\t\t\t\torigin={[0, 20]} />\r\n\t\t\t\t\t<SingleValueTooltip\r\n\t\t\t\t\t\tyLabel=\"High\" yAccessor={(d) => d.high}\r\n\t\t\t\t\t\torigin={[0, 40]} />\r\n\t\t\t\t\t<SingleValueTooltip\r\n\t\t\t\t\t\tyLabel=\"Low\" yAccessor={(d) => d.low}\r\n\t\t\t\t\t\torigin={[0, 60]} />\r\n\t\t\t\t\t<SingleValueTooltip\r\n\t\t\t\t\t\tyLabel=\"Volume\" yAccessor={(d) => d.volume}\r\n\t\t\t\t\t\torigin={[0, 80]} />\r\n\t\t\t\t</Chart>\r\n\t\t\t\t<Chart id={2} yExtents={d => d.volume} height={150} origin={(w, h) => [0, h - 150]} >\r\n\r\n\t\t\t\t\t<BarSeries yAccessor={d => d.volume}\r\n\t\t\t\t\t\tfill={(d) => d.close > d.open ? \"#28a745\" : \"#dc3545\"}\r\n\t\t\t\t\t\topacity={0.4}\r\n\t\t\t\t\t\twidthRatio={0.5} />\r\n\t\t\t\t</Chart>\r\n\t\t\t\t<CrossHairCursor />\r\n\t\t\t</ChartCanvas>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nAreaChartWithEdge.propTypes = {\r\n\tdata: PropTypes.array.isRequired,\r\n\twidth: PropTypes.number.isRequired,\r\n\tratio: PropTypes.number.isRequired,\r\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\r\n};\r\n\r\nAreaChartWithEdge.defaultProps = {\r\n\ttype: \"svg\",\r\n};\r\nAreaChartWithEdge = fitWidth(AreaChartWithEdge);\r\n\r\nexport default AreaChartWithEdge;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Config from '../context/Config.json';\r\n\r\nlet stockInfo = (props) => {\r\n    const { stock } = props;\r\n\r\n    const changesPercent = stock.changes / (stock.price - stock.changes) * 100;\r\n\r\n    return (\r\n        <div className=\"stock-info row mx-0 mb-3 px-0 col-12\">\r\n            <div className=\"container-name px-0 d-flex col-lg-8 col-md-12 col-sm-12 col-xs-12\">\r\n                <div className=\"stock-image d-flex\"><img src={stock.image} height={32} /></div>\r\n                <h1 className=\"companyName pl-4 text-left\">{stock.companyName}</h1>\r\n                <div className=\"stockSymbol pl-2 d-block\"><span className=\"symbol\">{stock.symbol}</span></div>\r\n            </div>\r\n\r\n            <div className=\"container-price d-flex text-right px-0 col-lg-4 col-md-12 col-sm-12 col-xs-12\">\r\n                <div className=\"price mr-4 d-inline-block\">{stock.price}<span className=\"currency\">{stock.currency}</span></div>\r\n                <div className={\"changes d-inline-block \" + ((stock.changes > 0) ? \"up\" : \"down\")}>{stock.changes} ({changesPercent.toFixed(2)})</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default stockInfo;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Config from '../context/Config.json';\r\n\r\nlet stockDetails = (props) => {\r\n    const { stock } = props;\r\n    console.log(stock);\r\n\r\n    const displayList = {\r\n        sector: \"Sector\",\r\n        industry: \"Industry\",\r\n        mktCap: \"Market Cap\",\r\n        range: \"52 week Range\",\r\n        lastDiv: \"Last Dividend\",\r\n        ipoDate: \"IPO Date\",\r\n        ceo: \"CEO\"\r\n    };\r\n\r\n    // console.log(displayList);\r\n\r\n    let infoHTML = new Map(Object.entries(displayList))\r\n\r\n    // console.log(infoHTML);\r\n\r\n    const changesPercent = stock.changes / (stock.price - stock.changes) * 100;\r\n\r\n    return (\r\n        <div className=\"stock-details pr-0 d-flex\">\r\n            <p className=\"company-desc text-left\">{stock.description}</p>\r\n            <table className=\"table-details text-left\">\r\n                <tbody>\r\n                    {\r\n                        Object.entries(displayList).map(([field, label]) => (\r\n                            <tr key={field} className={\"field \" + field}>\r\n                                <th className=\"label\">{label}</th>\r\n                                <td className=\"value text-left\">{stock[field]}</td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <a href={stock.website} className=\"company-website\"><div>View Offical Website</div></a>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default stockDetails;","import React, { useContext, useEffect, useState } from 'react';\r\n\r\nlet stockNews = (props) => {\r\n    const { news } = props;\r\n\r\n    const top3_News = () => {\r\n        let i = 0, limit = 4;\r\n\r\n        let top_result = [];\r\n\r\n        while (i < limit) {\r\n            top_result.push(news[i]);\r\n            i++;\r\n        }\r\n\r\n        console.log(Object.values(top_result));\r\n\r\n        return (\r\n            <div className=\"news-top col-lg-9 col-md-12 col-sm-12 col-xs-12\">\r\n                {\r\n                    Object.values(top_result).map((item, index) => {\r\n                        /* let dd = item.provider_publish_time.getDay(), mm = item.provider_publish_time.getMonth() + 1, yyyy = item.provider_publish_time.getFullYear(); */\r\n                        let dd = item.publishedDate.getDay(), mm = item.publishedDate.getMonth() + 1, yyyy = item.publishedDate.getFullYear();\r\n                        let time = ((dd < 10) ? '0' + dd : dd) + '-' + ((mm < 10) ? '0' + mm : mm) + '-' + yyyy;\r\n\r\n                        return (\r\n                            <div className=\"news-item row mx-0\" key={index}>\r\n                                <div className=\"thumbnail d-flex text-left px-0 col-lg-3 col-md-12 col-sm-12 col-xs-12\"><img className=\"w-100\" src={item.image} width={300} /></div>\r\n                                <div className=\"content text-left col-lg-9 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"time-author\">\r\n                                        <span className=\"time\">{time}</span>\r\n                                        <span className=\"author\">{item.site}</span>\r\n                                    </div>\r\n                                    <div className=\"title\">{item.title}</div>\r\n                                    <p className=\"summary\">{item.text}</p>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const other_news = () => {\r\n        let i = 3, limit = 12;\r\n\r\n        let other_news_list = [];\r\n\r\n        while (i < limit) {\r\n            if (news[i]) other_news_list.push(news[i]);\r\n            i++;\r\n        }\r\n\r\n        console.log(Object.values(other_news_list));\r\n\r\n        return (\r\n            <div className=\"news-other col-lg-3 col-md-12 col-sm-12 col-xs-12\">\r\n                {\r\n                    Object.values(other_news_list).map((item, index) => {\r\n                        /* let dd = item.provider_publish_time.getDay(), mm = item.provider_publish_time.getMonth() + 1, yyyy = item.provider_publish_time.getFullYear(); */\r\n                        let dd = item.publishedDate.getDay(), mm = item.publishedDate.getMonth() + 1, yyyy = item.publishedDate.getFullYear();\r\n                        let time = ((dd < 10) ? '0' + dd : dd) + '-' + ((mm < 10) ? '0' + mm : mm) + '-' + yyyy;\r\n\r\n                        return (\r\n                            <div className=\"news-item row mx-0 my-3\" key={index}>\r\n                                <div className=\"content\">\r\n                                    <div className=\"time-author\">\r\n                                        <span className=\"time\">{time}</span>\r\n                                        <span className=\"author\">{item.site}</span>\r\n                                    </div>\r\n                                    <div className=\"title\">{item.title}</div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"stock-news container d-flex row mx-0 px-0 pt-4 mt-5 col-12\">\r\n            <h2>Current News</h2>\r\n            <div className=\"news-wrapper row d-flex\">\r\n                {top3_News()}\r\n                {other_news()}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default stockNews;","import React, { useContext, useEffect, useState, useRef, useCallback, useLayoutEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Config from '../context/Config.json';\r\n\r\nimport example from '../context/alphavantage_example.json';\r\nimport example_details from '../context/example_details.json';\r\nimport news_example from '../context/stock_news_example.json';\r\n\r\n\r\nimport CandleChart from './CandleChart';\r\nimport Chart from './Chart';\r\nimport StockInfo from './StockInfo';\r\nimport StockDetails from './StockDetails';\r\nimport StockNews from './StockNews';\r\n// import HistoricalData from '../context/HistoricalData';\r\n\r\nimport CurrentStockContext from '../context/CurrentStcok';\r\n\r\n\r\nfunction StockResult() {\r\n  const [error, setError] = useState(null);\r\n  const [isSent, setIsSent] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState({\r\n    profile: false,\r\n    dailyData: false\r\n  });\r\n  const [stockData, setStockData] = useState(null);\r\n  const [dailyData, setDailyData] = useState([]);\r\n  const [stockNews, setStockNews] = useState(null);\r\n  const [doneFetch, setDoneFetch] = useState(false);\r\n\r\n  const [chartWidth, setChartWidth] = useState(0);\r\n\r\n  const [currentStock, setCurrentStock] = useContext(CurrentStockContext);\r\n\r\n  const { symbol } = useParams();\r\n\r\n  // const domWidth = useCallback(node => {\r\n  //   console.log(node);\r\n  //   console.log(node.getBoundingClientRect())\r\n  //   setChartWidth(node.getBoundingClientRect().width);\r\n  // }, []);\r\n\r\n  const domWidth = useRef();\r\n\r\n  const target = () => {\r\n    if (currentStock !== symbol) {\r\n      setCurrentStock(symbol);\r\n      return symbol;\r\n    }\r\n    return currentStock;\r\n  }\r\n\r\n  const fetchProfile = () => {\r\n    const ajaxURL = Config.API_BaseURL + \"profile/\" + target() + \"?apikey=\" + Config.API_Key;\r\n    fetch(ajaxURL)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setStockData(data);\r\n        let status = isLoaded;\r\n        status.profile = true;\r\n        setIsLoaded(status);\r\n        setDoneFetch(checkFetchStatus());\r\n      },\r\n        (error) => {\r\n          setStockData(error);\r\n        }\r\n      );\r\n\r\n    // setStockData(example_details);\r\n    // let status = isLoaded;\r\n    // status.profile = true;\r\n    // setIsLoaded(status);\r\n    // setDoneFetch(checkFetchStatus());\r\n  };\r\n\r\n  const fetchPriceHistory = async () => {\r\n    const ajaxURL = Config.Alphavantage_API_base + \"query?function=TIME_SERIES_DAILY&symbol=\" + target() + \"&outputsize=compact&apikey=\" + Config.API_Key;\r\n    fetch(ajaxURL)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        let dataset = data[\"Time Series (Daily)\"];\r\n        let chartData = [];\r\n\r\n        Object.entries(dataset).map((row) => {\r\n          let dayRecord = [];\r\n\r\n          let date = row[0];\r\n          let OHLCV = row[1];\r\n\r\n          dayRecord.date = new Date(date);\r\n          dayRecord.open = parseFloat(OHLCV['1. open']);\r\n          dayRecord.close = parseFloat(OHLCV['4. close']);\r\n          dayRecord.high = parseFloat(OHLCV['2. high']);\r\n          dayRecord.low = parseFloat(OHLCV['3. low']);\r\n          dayRecord.volume = Math.floor(OHLCV['5. volume']);\r\n\r\n          chartData.push(dayRecord);\r\n        });\r\n\r\n        chartData.sort((a, b) => a.date - b.date);\r\n        setDailyData(chartData);\r\n\r\n        console.log(chartData);\r\n\r\n        let status = isLoaded;\r\n        status.dailyData = true;\r\n        setIsLoaded(status);\r\n        setDoneFetch(checkFetchStatus());\r\n      })\r\n\r\n    // let dataset = example[\"Time Series (Daily)\"];\r\n\r\n    // let chartData = [];\r\n\r\n    // Object.entries(dataset).map((row) => {\r\n    //   let dayRecord = [];\r\n\r\n    //   let date = row[0];\r\n    //   let OHLCV = row[1];\r\n\r\n    //   dayRecord.date = new Date(date);\r\n    //   dayRecord.open = parseFloat(OHLCV['1. open']);\r\n    //   dayRecord.close = parseFloat(OHLCV['4. close']);\r\n    //   dayRecord.high = parseFloat(OHLCV['2. high']);\r\n    //   dayRecord.low = parseFloat(OHLCV['3. low']);\r\n    //   dayRecord.volume = Math.floor(OHLCV['5. volume']);\r\n\r\n    //   chartData.push(dayRecord);\r\n    // });\r\n\r\n    // chartData.sort((a, b) => a.date - b.date);\r\n    // setDailyData(chartData);\r\n\r\n    // console.log(chartData);\r\n\r\n    // let status = isLoaded;\r\n    // status.dailyData = true;\r\n    // setIsLoaded(status);\r\n    // setDoneFetch(checkFetchStatus());\r\n  }\r\n\r\n  const getData = async () => {\r\n    const ajaxURL = Config.API_BaseURL + \"historical-price-full/\" + target() + \"?apikey=\" + Config.API_Key;\r\n    fetch(ajaxURL)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        let dataset = data.historical;\r\n        dataset.map((item) => {\r\n          let full_date = new Date(item.date);\r\n          item.date = full_date;\r\n        });\r\n\r\n        dataset.sort((a, b) => a.date - b.date);\r\n        setDailyData(dataset);\r\n        setIsLoaded(true);\r\n      })\r\n  };\r\n\r\n  const fetchStockNews = async () => {\r\n    // const ajaxURL = \"https://yahoo-finance-low-latency.p.rapidapi.com/v2/finance/news?symbols=\" + target();\r\n\r\n    // const headers = new Headers();\r\n    // let api_key = Config['Yahoo-x_rapidapi_key'];\r\n    // let api_host = Config['Yahoo-x_rapidapi_host'];\r\n\r\n    // headers.append(\"x-rapidapi-key\", api_key);\r\n    // headers.append(\"x-rapidapi-host\", api_host);\r\n\r\n    // var requestOptions = {\r\n    //   method: 'GET',\r\n    //   headers: headers,\r\n    //   redirect: 'follow'\r\n    // };\r\n\r\n    const ajaxURL = Config.API_BaseURL + \"stock_news?tickers=\" + target() + \"&limit=20&apikey=\" + Config.API_Key;\r\n\r\n    // fetch(ajaxURL, requestOptions)\r\n    fetch(ajaxURL)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // let news = data.Content.result;\r\n        // news.map((item) => {\r\n        //   item.provider_publish_time = new Date((1000 * item.provider_publish_time) + item.gmtOffSetMilliseconds);\r\n        //   let div = document.createElement(\"div\");\r\n\r\n        //   div.innerHTML = item.title;\r\n        //   item.title = div.textContent || div.innerText;\r\n\r\n        //   div.innerHTML = item.summary;\r\n        //   item.summary = div.textContent || div.innerText;\r\n        // });\r\n\r\n        let news = data;\r\n        news.map((item) => {\r\n          item.publishedDate = new Date(item.publishedDate);\r\n\r\n          let div = document.createElement(\"div\");\r\n\r\n          div.innerHTML = item.title;\r\n          item.title = div.textContent || div.innerText;\r\n\r\n          div.innerHTML = item.text;\r\n          item.text = div.textContent || div.innerText;\r\n        });\r\n\r\n        setStockNews(news);\r\n\r\n        let status = isLoaded;\r\n        status.news = true;\r\n        setIsLoaded(status);\r\n        setDoneFetch(checkFetchStatus());\r\n      })\r\n      .catch(error => console.log('error', error));\r\n\r\n    // console.log(news_example);\r\n\r\n    // let news = news_example.Content.result;\r\n    // news.map((item) => {\r\n    //   item.provider_publish_time = new Date((1000 * item.provider_publish_time) + item.gmtOffSetMilliseconds);\r\n    //   let div = document.createElement(\"div\");\r\n\r\n    //   div.innerHTML = item.title;\r\n    //   item.title = div.textContent || div.innerText;\r\n\r\n    //   div.innerHTML = item.summary;\r\n    //   item.summary = div.textContent || div.innerText;\r\n    // });\r\n\r\n    // console.log(news);\r\n\r\n    // setStockNews(news);\r\n\r\n    // let status = isLoaded;\r\n    // status.news = true;\r\n    // setIsLoaded(status);\r\n    // setDoneFetch(checkFetchStatus());\r\n  }\r\n\r\n  const checkFetchStatus = () => {\r\n    let showStock = Object.values(isLoaded).every(status => {\r\n      return status == true;\r\n    });\r\n    return showStock;\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    // getData();\r\n    fetchProfile();\r\n    fetchPriceHistory();\r\n    fetchStockNews();\r\n  }, []);\r\n\r\n  const displayChart = () => {\r\n\r\n    if (doneFetch) {\r\n      return (\r\n        <div className=\"stock-data row mx-0\">\r\n          <StockInfo stock={stockData[0]} />\r\n          <div className=\"stock-result-wrapper px-0 pt-2 mx-0 row col-12\">\r\n            <div className=\"stock-chart p-2 col-lg-9 col-md-12 col-sm-12\" ref={el => { domWidth.current = el; console.log(domWidth); }} id=\"stock-chart\">\r\n              <Chart type=\"hybrid\" data={dailyData} symbol={currentStock} height={(window.innerWidth > 768) ? 500 : 250} />\r\n            </div>\r\n            <div className=\"stock-details col-lg-3 col-md-12 col-sm-12\">\r\n              <StockDetails stock={stockData[0]} />\r\n            </div>\r\n          </div>\r\n          {stockNews && <StockNews news={stockNews} />}\r\n        </div>\r\n      )\r\n    } else {\r\n      return <div>Fetching Data</div>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"stock-result-container\">\r\n      {displayChart()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StockResult;","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom'\r\nimport './App.css';\r\nimport './css/scss/main.scss';\r\n\r\nimport Home from './component/Home';\r\nimport SearchBar from './component/SearchBar';\r\nimport StockResult from './component/StockResult';\r\n\r\nimport { CurrentStockProvider } from './context/CurrentStcok';\r\n\r\nfunction App() {\r\n  const [ current, setCurrent ] = useState('');\r\n  return (\r\n    <div className=\"App\">\r\n      <CurrentStockProvider value={[ current, setCurrent ]}>\r\n        <HashRouter basename=\"/\">\r\n          <SearchBar />\r\n          <main>\r\n            <section>\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Home}></Route>\r\n                <Route path=\"/stock/:symbol\" component={StockResult}></Route>\r\n              </Switch>\r\n            </section>\r\n            <aside>\r\n              \r\n            </aside>\r\n          </main>\r\n        </HashRouter>\r\n      </CurrentStockProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/usa.006f99fa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/uk.3a8f6366.jpg\";","module.exports = __webpack_public_path__ + \"static/media/euro.cd6e205c.jpg\";"],"sourceRoot":""}